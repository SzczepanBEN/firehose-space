---
import BaseLayout from '../layouts/BaseLayout.astro';

// Get period from URL params
const url = new URL(Astro.request.url);
const period = url.searchParams.get('period') || 'total';
---

<BaseLayout title="Author Leaderboard" description="Top content creators on Firehose.space ranked by community votes">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between mb-6">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
          üèÜ Author Leaderboard
        </h1>
      </div>
      
      <!-- Period selector -->
      <div class="flex items-center space-x-4 mb-6">
        <span class="text-gray-600 dark:text-gray-400 font-medium">Leaderboard:</span>
        <div class="flex items-center space-x-1 bg-gray-100 dark:bg-gray-800 rounded-lg p-1">
          <a 
            href="/leaderboard?period=total" 
            class={`px-3 py-1 rounded-md text-sm font-medium ${
              period === 'total' 
                ? 'bg-orange-100 text-orange-700 dark:bg-orange-900 dark:text-orange-300' 
                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
            }`}
          >
            All Time
          </a>
          <a 
            href="/leaderboard?period=weekly" 
            class={`px-3 py-1 rounded-md text-sm font-medium ${
              period === 'weekly' 
                ? 'bg-orange-100 text-orange-700 dark:bg-orange-900 dark:text-orange-300' 
                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
            }`}
          >
            This Week
          </a>
        </div>
      </div>
      
      <p class="text-gray-600 dark:text-gray-400 text-lg">
        {period === 'weekly' ? 'Top contributors from the last 7 days based on upvotes received and clicks generated.' :
         'All-time top contributors ranked by total upvotes and community engagement.'}
      </p>
    </div>

    <!-- Leaderboard Info -->
    <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6 mb-8">
      <h3 class="text-lg font-semibold text-blue-900 dark:text-blue-200 mb-3">
        How Author Scoring Works
      </h3>
      <div class="text-blue-800 dark:text-blue-300 space-y-2">
        <p><strong>Score Formula:</strong> Post upvotes + (0.5 √ó comment upvotes) + unique clicks on your links</p>
        <ul class="list-disc list-inside space-y-1 ml-4">
          <li>Each upvote on your posts = 1 point</li>
          <li>Each upvote on your comments = 0.5 points</li>
          <li>Each unique click on your shared links = 1 point</li>
        </ul>
      </div>
    </div>

    <!-- Leaderboard -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700">
      <div class="p-6 border-b border-gray-200 dark:border-gray-700">
        <h2 class="text-xl font-bold text-gray-900 dark:text-white">
          Top Authors
        </h2>
      </div>

      <div id="leaderboard-container" class="divide-y divide-gray-200 dark:divide-gray-700">
        <!-- Loading state -->
        <div class="flex items-center justify-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-orange-600"></div>
          <span class="ml-3 text-gray-600 dark:text-gray-400">Loading leaderboard...</span>
        </div>
      </div>

      <!-- Load more -->
      <div class="p-6 border-t border-gray-200 dark:border-gray-700 text-center">
        <button 
          id="load-more-btn"
          class="text-orange-600 dark:text-orange-400 hover:text-orange-700 dark:hover:text-orange-500 text-sm font-medium"
          style="display: none;"
        >
          Load more authors
        </button>
      </div>
    </div>

    <!-- Submit Encouragement -->
    <div class="mt-8 bg-gradient-to-r from-green-50 to-emerald-50 dark:from-gray-800 dark:to-gray-700 rounded-lg p-6 border border-green-100 dark:border-gray-600">
      <div class="text-center">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
          Want to climb the leaderboard?
        </h3>
        <p class="text-gray-600 dark:text-gray-400 mb-4">
          Share great content, engage meaningfully, and build your reputation in the community.
        </p>
        <a 
          href="/submit" 
          class="bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
        >
          Submit Your First Post
        </a>
      </div>
    </div>
  </div>
</BaseLayout>

<script define:vars={{ period }}>
  document.addEventListener('DOMContentLoaded', () => {
    loadLeaderboard(period);
    
    const loadMoreBtn = document.getElementById('load-more-btn');
    loadMoreBtn?.addEventListener('click', () => loadMoreLeaderboard(period));
  });

  let currentOffset = 0;
  const authorsPerPage = 50;

  async function loadLeaderboard(timePeriod = 'total', append = false) {
    try {
      const response = await fetch(`/api/leaderboard?period=${timePeriod}&limit=${authorsPerPage}&offset=${append ? currentOffset : 0}`);
      
      if (!response.ok) {
        throw new Error('Failed to load leaderboard');
      }
      
      const data = await response.json();
      
      if (append) {
        appendAuthors(data.authors);
      } else {
        renderLeaderboard(data.authors);
        currentOffset = data.authors.length;
      }
      
      // Hide/show load more button
      const loadMoreBtn = document.getElementById('load-more-btn');
      if (loadMoreBtn) {
        loadMoreBtn.style.display = data.pagination.hasMore ? 'block' : 'none';
      }
      
    } catch (error) {
      console.error('Failed to load leaderboard:', error);
      showError('Failed to load leaderboard. Please refresh the page.');
    }
  }

  async function loadMoreLeaderboard(timePeriod = 'total') {
    currentOffset += authorsPerPage;
    await loadLeaderboard(timePeriod, true);
  }

  function renderLeaderboard(authors) {
    const container = document.getElementById('leaderboard-container');
    if (!container) return;
    
    if (authors.length === 0) {
      container.innerHTML = `
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.196-2.196M17 20H7m10 0v-2c0-5.494-3.586-9.193-8-9.5m0 11.5v-2c0-5.494 3.586-9.193 8-9.5m-4 6v-2c0-5.494-3.586-9.193-8-9.5" />
          </svg>
          <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No authors yet</h3>
          <p class="text-gray-500 dark:text-gray-400">Be the first to contribute content!</p>
        </div>
      `;
      return;
    }
    
    container.innerHTML = authors.map((author, index) => createAuthorHTML(author, index + 1)).join('');
  }

  function appendAuthors(authors) {
    const container = document.getElementById('leaderboard-container');
    if (!container) return;
    
    const startRank = container.children.length + 1;
    const authorsHTML = authors.map((author, index) => createAuthorHTML(author, startRank + index)).join('');
    container.insertAdjacentHTML('beforeend', authorsHTML);
  }

  function createAuthorHTML(author, rank) {
    const medalEmoji = rank === 1 ? 'ü•á' : rank === 2 ? 'ü•à' : rank === 3 ? 'ü•â' : '';
    const rankClass = rank <= 3 ? 'text-yellow-600 font-bold' : 'text-gray-500 dark:text-gray-400';
    
    return `
      <div class="p-6">
        <div class="flex items-center space-x-4">
          <!-- Rank -->
          <div class="flex-shrink-0 w-12 text-center">
            <span class="text-2xl font-bold ${rankClass}">
              ${medalEmoji}${rank}
            </span>
          </div>

          <!-- Avatar -->
          <div class="flex-shrink-0">
            <img 
              src="${author.avatar_url || '/default-avatar.svg'}" 
              alt="${author.display_name}"
              class="w-16 h-16 rounded-full border-2 ${rank <= 3 ? 'border-yellow-400' : 'border-gray-200 dark:border-gray-600'}"
            >
          </div>

          <!-- Author Info -->
          <div class="flex-1 min-w-0">
            <div class="flex items-center space-x-2 mb-1">
              <a 
                href="/u/${author.id}" 
                class="text-xl font-bold text-gray-900 dark:text-white hover:text-orange-600 dark:hover:text-orange-400 transition-colors"
              >
                ${author.display_name}
              </a>
              
              ${rank <= 3 ? `<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">Top ${rank}</span>` : ''}
            </div>
            
            ${author.bio ? `<p class="text-gray-600 dark:text-gray-400 mb-2 line-clamp-2">${author.bio}</p>` : ''}
            
            <div class="flex items-center space-x-6 text-sm text-gray-500 dark:text-gray-400">
              <span><strong class="text-gray-900 dark:text-white">${author.posts_count || 0}</strong> posts</span>
              <span><strong class="text-gray-900 dark:text-white">${author.comments_count || 0}</strong> comments</span>
              <span><strong class="text-gray-900 dark:text-white">${author.total_clicks || 0}</strong> clicks generated</span>
            </div>
          </div>

          <!-- Score -->
          <div class="text-right">
            <div class="text-2xl font-bold text-orange-600 dark:text-orange-400">
              ${Math.floor(author.total_score)}
            </div>
            <div class="text-sm text-gray-500 dark:text-gray-400">
              points
            </div>
          </div>
        </div>
      </div>
    `;
  }

  function showError(message) {
    const container = document.getElementById('leaderboard-container');
    if (container) {
      container.innerHTML = `
        <div class="p-6">
          <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4">
            <p class="text-red-800 dark:text-red-200">${message}</p>
          </div>
        </div>
      `;
    }
  }
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
